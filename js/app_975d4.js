(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(t,e,i){"use strict";function s(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,s)}return i}function o(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}i.r(e);class CelestialBody{static genColor(){return`#${("000000"+Math.random().toString(16).slice(2,8).toUpperCase()).slice(-6)}`}static genArrowTransform({pos:t,rotate:e,x:i,y:s}){return{json:JSON.stringify({pos:t,rotate:e,x:i,y:s}),value:`translate(${i} ${s}) rotate(${e})`}}static createArrow({pos:t,rotate:e=0,x:i=0,y:s=0}){const o=document.createElementNS("http://www.w3.org/2000/svg","polygon"),n=CelestialBody.genArrowTransform({pos:t,rotate:e,x:i,y:s});return o.setAttributeNS(null,"points","0,-5 5,5 0,2.5 -5,5"),o.setAttributeNS(null,"data-transform",n.json),o}constructor({color:t,gravity:e=CelestialBody.DEFAULT__GRAVITY,id:i,radius:s=CelestialBody.SIZE__MIN,rotation:o=CelestialBody.ROTATION__CLOCKWISE,x:n=0,y:a=0}={}){this.color=t||CelestialBody.genColor(),this.gravity=e,this.gravityFieldVal=s*e,this.id=i||Date.now(),this.radius=s,this.rotation=o,this.x=n,this.y=a,this.gravityField=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.gravityField.setAttributeNS(null,"cx",0),this.gravityField.setAttributeNS(null,"cy",0),this.gravityField.setAttributeNS(null,"r",this.gravityFieldVal),this.gravityField.setAttributeNS(null,"fill","none"),this.gravityField.setAttributeNS(null,"stroke",this.color),this.gravityField.setAttributeNS(null,"stroke-opacity","15%"),this.gravityField.setAttributeNS(null,"data-id",`${this.id}_gF`),this.directionalArrows=document.createElementNS("http://www.w3.org/2000/svg","g"),this.directionalArrows.setAttributeNS(null,"fill",this.color),this.directionalArrows.setAttributeNS(null,"fill-opacity","25%"),this.directionalArrows.setAttributeNS(null,"stroke","none"),this.directionalArrows.append(CelestialBody.createArrow({pos:"top"})),this.directionalArrows.append(CelestialBody.createArrow({pos:"left"})),this.directionalArrows.append(CelestialBody.createArrow({pos:"bottom"})),this.directionalArrows.append(CelestialBody.createArrow({pos:"right"})),this.celestialBody=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.celestialBody.setAttributeNS(null,"cx",0),this.celestialBody.setAttributeNS(null,"cy",0),this.celestialBody.setAttributeNS(null,"r",s),this.celestialBody.setAttributeNS(null,"fill",this.color),this.celestialBody.setAttributeNS(null,"stroke","none"),this.celestialBody.setAttributeNS(null,"data-id",this.id),this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.setAttributeNS(null,"transform",`translate(${n} ${a})`),this.group.append(this.gravityField),this.group.append(this.directionalArrows),this.group.append(this.celestialBody),this.setColor=this.setColor.bind(this),this.setGravity=this.setGravity.bind(this),this.setRadius=this.setRadius.bind(this),this.setRotation=this.setRotation.bind(this),this.editableProps={color:{handler:this.setColor,label:"Color",type:CelestialBody.EDITABLE_TYPE__COLOR,value:()=>this.color},gravity:{handler:this.setGravity,label:"Gravity",min:0,max:50,type:CelestialBody.EDITABLE_TYPE__NUMBER,value:()=>+this.gravity},radius:{handler:this.setRadius,label:"Radius",min:CelestialBody.SIZE__MIN,max:CelestialBody.SIZE__MAX,type:CelestialBody.EDITABLE_TYPE__NUMBER,value:()=>+this.radius},rotation:{handler:this.setRotation,label:"Rotation",options:[CelestialBody.ROTATION__CLOCKWISE,CelestialBody.ROTATION__COUNTER_CLOCKWISE],type:CelestialBody.EDITABLE_TYPE__SELECT,value:()=>this.rotation}},this.renderDirectionalArrows()}renderDirectionalArrows(){const t=this.radius*this.gravity,e=this.rotation===CelestialBody.ROTATION__CLOCKWISE;[...this.directionalArrows.childNodes].forEach(i=>{const n=JSON.parse(i.getAttribute("data-transform"));switch(n.pos){case"top":n.y=-t,n.rotate=e?90:270;break;case"left":n.x=t,n.rotate=e?180:0;break;case"bottom":n.y=t,n.rotate=e?270:90;break;case"right":n.x=-t,n.rotate=e?0:180}const a=CelestialBody.genArrowTransform(function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?s(i,!0).forEach((function(e){o(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):s(i).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},n));i.setAttributeNS(null,"transform",a.value),i.setAttributeNS(null,"data-transform",a.json)})}setColor(t){this.gravityField.setAttributeNS(null,"stroke",t),this.directionalArrows.setAttributeNS(null,"fill",t),this.celestialBody.setAttributeNS(null,"fill",t),this.color=t}setGravity(t){this.gravity=t,this.gravityFieldVal=this.radius*t,this.gravityField.setAttributeNS(null,"r",this.gravityFieldVal),this.renderDirectionalArrows()}setPos({x:t,y:e}){void 0!==t&&(this.x=t),void 0!==e&&(this.y=e),this.group.setAttributeNS(null,"transform",`translate(${this.x} ${this.y})`)}setRadius(t){let e=t;e<CelestialBody.SIZE__MIN?e=CelestialBody.SIZE__MIN:e>CelestialBody.SIZE__MAX&&(e=CelestialBody.SIZE__MAX),e=Math.round(e),this.celestialBody.setAttributeNS(null,"r",e),this.radius=e,this.setGravity(this.gravity)}setRotation(t){this.rotation=t,this.renderDirectionalArrows()}}CelestialBody.DEFAULT__GRAVITY=2,CelestialBody.EDITABLE_TYPE__COLOR="color",CelestialBody.EDITABLE_TYPE__NUMBER="number",CelestialBody.EDITABLE_TYPE__SELECT="select",CelestialBody.ROTATION__CLOCKWISE="clockwise",CelestialBody.ROTATION__COUNTER_CLOCKWISE="counter-clockwise",CelestialBody.SIZE__MIN=10,CelestialBody.SIZE__MAX=100;function n(t,e){if(!document.getElementById(t)){const i=document.createElement("style");i.id=t,i.innerHTML=e,document.head.append(i)}}class Dialog_Dialog{constructor({className:t="dialog",content:e="",onCancel:i,onSubmit:s,parentEl:o,x:a=0,y:r=0}={}){n("dialogStyles",`\n      .${t} {\n        font-family: Helvetica, Arial, sans-serif;\n        border: solid 1px #b7b7b7;\n        border-radius: 0.25em;\n        padding: 0;\n        margin: 0;\n        box-shadow: 0 6px 10px 3px;\n        background: #eee;\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      \n      .${t}-backdrop {\n        background: rgba(38, 45, 56, 0.5);  \n        position: fixed;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    `),this.onCancel=i,this.onSubmit=s,this.parentEl=o,this.x=a,this.y=r,this.backdrop=document.createElement("div"),this.backdrop.setAttribute("class",`${t}-backdrop`),this.dialogWindow=document.createElement("div"),this.dialogWindow.setAttribute("class",`${t}`),o.append(this.backdrop),o.append(this.dialogWindow),this.dialogWindow.innerHTML=e,this.handleClick=this.handleClick.bind(this),this.backdrop.addEventListener("click",this.handleClick),this.dialogWindow.addEventListener("click",this.handleClick),this.updatePosition({x:a,y:r})}handleClick(t){const e=t.target;if("BUTTON"===e.nodeName){if("submit"===e.type){t.preventDefault();const i=new FormData(this.dialogWindow.querySelector("form"));this.onSubmit&&this.onSubmit(e.name,i)}else this.onCancel&&this.onCancel();this.remove()}else e===this.backdrop&&(this.onCancel&&this.onCancel(),this.remove())}remove(){this.backdrop.remove(),this.dialogWindow.remove()}updatePosition({x:t,y:e}){window.requestAnimationFrame(()=>{const i=this.dialogWindow.offsetWidth,s=this.dialogWindow.offsetHeight;this.x=t,this.y=e,t+i>this.parentEl.offsetWidth&&(this.x=t-i),e+s>this.parentEl.offsetHeight&&(this.y=e-s),this.dialogWindow.style.top=`${this.y}px`,this.dialogWindow.style.left=`${this.x}px`})}}class Planet_Planet extends CelestialBody{constructor(t){super(t)}}const a=[class Asteroid_Asteroid extends CelestialBody{constructor(t){super(t)}},class BlackHole_BlackHole extends CelestialBody{constructor(t){t.color="#000000",super(t),delete this.editableProps.color}},class Moon_Moon extends CelestialBody{constructor(t){super(t)}},Planet_Planet,class Sun_Sun extends CelestialBody{constructor(t){t.color="#FFFFFF",super(t),delete this.editableProps.color,this.celestialBody.setAttributeNS(null,"filter","url(#glow)")}}];class Creator_Creator{constructor({className:t="creator",parentEl:e}={}){n("pcStyles",`\n      .${t} {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      \n      .${t}-container {\n        background: black;\n      }\n      \n      .${t}__dialog form {\n        padding: 1em;\n      }\n      .${t}__dialog-prop {\n        padding-bottom: 0.5em;\n        border-bottom: solid 1px #dadada;\n        margin-bottom: 0.5em;\n        display: flex;\n        justify-content: space-between;\n      }\n      .${t}__dialog-prop *:first-child {\n        margin-left: 1em;\n      }\n      .${t}__dialog-menu {\n        margin: 0;\n        padding: 0;\n        display: flex;\n        justify-content: flex-end;\n      }\n      .${t}__dialog-menu button {\n        width: 100%;\n      }\n    `),this.celestialBodies={},this.className=t,this.parentEl=e,this.parentSVG=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.parentSVG.setAttributeNS(null,"class",t),this.parentSVG.setAttributeNS(null,"width",e.offsetWidth),this.parentSVG.setAttributeNS(null,"height",e.offsetHeight),this.defs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.parentSVG.append(this.defs),this.glowFilter=document.createElementNS("http://www.w3.org/2000/svg","filter"),this.glowFilter.setAttributeNS(null,"id","glow"),this.glowFilter.setAttributeNS(null,"width","600%"),this.glowFilter.setAttributeNS(null,"height","600%"),this.glowFilter.setAttributeNS(null,"x","-150%"),this.glowFilter.setAttributeNS(null,"y","-150%"),this.glowFilter.innerHTML='\n      \x3c!-- Thicken out the original shape --\x3e\n      <feMorphology operator="dilate" radius="4" in="SourceAlpha" result="thicken" />\n\n      \x3c!-- Use a gaussian blur to create the soft blurriness of the glow --\x3e\n      <feGaussianBlur in="thicken" stdDeviation="10" result="blurred" />\n\n      \x3c!-- Change the colour --\x3e\n      <feFlood flood-color="rgb(255, 255, 255)" result="glowColor" />\n\n      \x3c!-- Color in the glows --\x3e\n      <feComposite in="glowColor" in2="blurred" operator="in" result="softGlow_colored" />\n\n      \x3c!--\tLayer the effects together --\x3e\n      <feMerge>\n        <feMergeNode in="softGlow_colored"/>\n        <feMergeNode in="SourceGraphic"/>\n      </feMerge>\n    ',this.defs.append(this.glowFilter),this.mouseDown=this.mouseDown.bind(this),this.mouseMoved=this.mouseMoved.bind(this),this.mouseUp=this.mouseUp.bind(this),this.handleClick=this.handleClick.bind(this),this.addListeners()}addListeners(){this.parentSVG.addEventListener("click",this.handleClick)}addEditablePropsToDialog(t){const e=[];let i="";Object.keys(t.editableProps).forEach(s=>{const o=t.editableProps[s],n=o.value();let a="";switch(o.type){case CelestialBody.EDITABLE_TYPE__COLOR:n.lenth<6&&e.push(`- [${s}] Hex colors should be 6 characters long, recieved '${n}'`),a=`<input type="color" name="${s}" value="${n}" />`;break;case CelestialBody.EDITABLE_TYPE__NUMBER:void 0===n&&e.push(`- [${s}] Missing value`),a=`<input type="number" name="${s}" ${void 0!==o.min?`min="${o.min}"`:""} ${void 0!==o.max?`max="${o.max}"`:""} value="${n}" />`;break;case CelestialBody.EDITABLE_TYPE__SELECT:o.options&&o.options.length||e.push(`- [${s}] Missing options`),a=`<select name="${s}">${o.options.map(t=>`<option value="${t}" ${n===t?"selected":""}>${t}</option>`)}</select>`}i+=`<label class="${this.className}__dialog-prop">${o.label}: ${a}</label>`}),document.getElementById("editableProps").innerHTML=i,e.length&&alert(`[ERROR] Missing required values\n${e.join("\n")}`)}clear(){[...this.parentSVG.childNodes].forEach(t=>{"defs"!==t.nodeName&&t.remove()}),this.celestialBodies={}}editAttributes(t){let e=t,i=t;const s=`<select name="type">${a.map(t=>{const i=e.constructor.name,s=t.name,o=s.split("_")[0];return`<option value="${s}" ${i===s?"selected":""}>${o}</option>`})}</select>`,o=new Dialog_Dialog({className:`${this.className}__dialog`,content:`\n        <form>\n          <label class="${this.className}__dialog-prop">Type: ${s}</label>\n          <div id="editableProps"></div>\n          <menu class="${this.className}__dialog-menu">\n            <button type="button">Cancel</button>\n            <button type="submit">Save</button>\n          </menu>\n        </form>\n      `,onCancel:()=>{e!==i&&(e.group.remove(),this.celestialBodies[e.id]=i,this.parentSVG.appendChild(i.group)),this.dialogIsOpen=!1},onSubmit:(t,i)=>{[...i].forEach(([t,i])=>{const s=e.editableProps[t];s&&s.handler(i)}),this.dialogIsOpen=!1},parentEl:this.parentEl,x:e.x,y:e.y});this.addEditablePropsToDialog(e),this.dialogIsOpen=!0,o.dialogWindow.addEventListener("change",t=>{if("type"===t.target.name){const s=a.find(e=>e.name===t.target.value);if(s.name!==e.constructor.name){const{color:t,gravity:n,id:a,radius:r,rotation:l,x:d,y:h}=e;e.group.remove(),e=s.name===i.constructor.name?i:new s({color:t,gravity:n,id:a,radius:r,rotation:l,x:d,y:h}),this.celestialBodies[a]=e,this.addEditablePropsToDialog(e),o.updatePosition({x:d,y:h}),this.parentSVG.appendChild(e.group)}}}),o.dialogWindow.addEventListener("input",t=>{const i=t.target.name,s=t.target.value,o=e.editableProps[i];o&&o.handler(s)})}findGravitationalRelationships(){const t={};return Object.keys(this.celestialBodies).forEach(e=>{const i=this.celestialBodies[e],{gravityFieldVal:s,x:o,y:n}=i;Object.keys(this.celestialBodies).forEach(i=>{if(i!==e){const a=this.celestialBodies[i],{radius:r,x:l,y:d}=a;Math.hypot(o-l,n-d)<=s+r&&(t[e]||(t[e]=[]),t[e].push(a))}})}),t}handleClick(t){const e=t.target;this.mouseIsDown||"svg"===e.nodeName||this.editAttributes(this.celestialBodies[e.getAttribute("data-id")])}mouseDown({mouseX:t,mouseY:e}){this.dialogIsOpen||(this.startX=t,this.startY=e,this.mouseIsDown=!0)}mouseMoved({mouseX:t,mouseY:e}){if(this.mouseIsDown){const i=t-this.startX,s=e-this.startY,o=Math.sqrt(i*i+s*s);!this.currentCelestialBody&&o>=Planet_Planet.SIZE__MIN?(this.currentCelestialBody=new Planet_Planet({x:this.startX,y:this.startY}),this.parentSVG.appendChild(this.currentCelestialBody.group),this.celestialBodies[this.currentCelestialBody.id]=this.currentCelestialBody):this.currentCelestialBody&&this.currentCelestialBody.setRadius(o)}}mouseUp(){this.currentCelestialBody=void 0,this.mouseIsDown=!1}rotateAroundPoint(t,e,i,s){const o=i*(Math.PI/180),n=Math.cos(o)*(s.x-t)-Math.sin(o)*(s.y-e)+t,a=Math.sin(o)*(s.x-t)+Math.cos(o)*(s.y-e)+e;s.setPos({x:n,y:a})}getDistanceBetweenPoints(t,e,i,s){return Math.sqrt(Math.pow(t-i,2)+Math.pow(e-s,2))}startSimulation(){const t=this.findGravitationalRelationships(),e=()=>{Object.keys(t).forEach(e=>{const{gravityFieldVal:i,rotation:s,x:o,y:n}=this.celestialBodies[e];t[e].forEach(t=>{const e=this.getDistanceBetweenPoints(o,n,t.x,t.y);let a=1*Math.abs(Math.round(e-i)/100);s===CelestialBody.ROTATION__COUNTER_CLOCKWISE&&(a*=-1),this.rotateAroundPoint(o,n,a,t)})})},i=()=>{this.runSimulation&&(e(),window.requestAnimationFrame(i))};this.runSimulation=!0,i()}stopSimulation(){this.runSimulation=!1}}class Grid_Grid{constructor({className:t="bg-grid",columns:e=20,columnSpacing:i=50,lineColor:s,rows:o=10,rowSpacing:a=50}={}){n("gridStyles",`\n      .${t} {\n        font-size: 0;\n        background: #262d38;\n        cursor: crosshair;\n        opacity: 0.5;\n      }\n      \n      .${t} .hover-canvas {\n        filter: blur(15px);\n        opacity: 0.5;\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n    `),this.container=document.createElement("div"),this.gridCanvas=document.createElement("canvas"),this.gridCtx=this.gridCanvas.getContext("2d"),this.hoverCanvas=document.createElement("canvas"),this.hoverCtx=this.hoverCanvas.getContext("2d"),this.gridCanvas.width=e*i,this.gridCanvas.height=o*a,this.hoverCanvas.width=this.gridCanvas.width,this.hoverCanvas.height=this.gridCanvas.height,this.columns=e,this.columnSpacing=i,this.rows=o,this.rowSpacing=a,this.lineColor=s,this.renderGrid(),t&&this.container.classList.add(t),this.gridCanvas.classList.add("grid-canvas"),this.hoverCanvas.classList.add("hover-canvas"),this.container.append(this.gridCanvas),this.container.append(this.hoverCanvas),this.mouseMoved=this.mouseMoved.bind(this),this.mouseLeft=this.mouseLeft.bind(this)}checkHoverPoint(t,e,i,s,o){const n=(t-i)*(t-i)+(e-s)*(e-s),a=o*o;return{inRadius:n<=a,scale:(a-n)/100*.001}}mouseMoved({mouseX:t,mouseY:e}){const i=this.columnSpacing*(this.columns/3);this.hoverCtx.clearRect(0,0,this.hoverCanvas.width,this.hoverCanvas.height),this.hoverCtx.fillStyle="#fff",this.hoverCtx.beginPath();for(let s=0;s<=this.rows;s++)for(let o=0;o<=this.columns;o++){const n=o*this.columnSpacing+.5,a=s*this.rowSpacing+.5,{inRadius:r,scale:l}=this.checkHoverPoint(n,a,t,e,i);if(r){const t=10*l;this.hoverCtx.moveTo(n,a),this.hoverCtx.arc(n,a,t,0,2*Math.PI,!0)}}this.hoverCtx.fill()}mouseLeft(){this.hoverCtx.clearRect(0,0,this.hoverCanvas.width,this.hoverCanvas.height)}renderGrid(){const t=document.createElement("canvas"),e=t.getContext("2d");t.width=.3*this.columnSpacing,t.height=.3*this.rowSpacing,e.lineWidth=1,this.lineColor&&(e.strokeStyle=this.lineColor),e.beginPath(),e.moveTo(t.width/2,0),e.lineTo(t.width/2,t.height),e.stroke(),e.beginPath(),e.moveTo(0,t.height/2),e.lineTo(t.width,t.height/2),e.stroke();for(let e=0;e<=this.rows;e++){const i=e===this.rows?-.5:.5;for(let s=0;s<=this.columns;s++){const o=s===this.columns?-.5:.5;this.gridCtx.drawImage(t,0,0,this.gridCanvas.width,this.gridCanvas.height,o+(s*this.columnSpacing-t.width/2)|0,i+(e*this.rowSpacing-t.height/2)|0,this.gridCanvas.width,this.gridCanvas.height)}}}}const r=(t,e="00")=>e.substring(0,e.length-`${t}`.length)+t,l=new Date(window.BUILD_TIME),d=l.getHours(),h=r(l.getMonth()+1),c=r(l.getDate()),u=r(d>12?d-12:d),p=r(l.getMinutes()),m=d>=12?"pm":"am",g=`${h}/${c}/${l.getFullYear()} ${u}:${p}${m}`;class RootNav_RootNav{constructor({className:t="root-nav",onClear:e,onSimulate:i,simulationStartText:s}={}){n("rnStyles",`\n      .${t} {\n        padding: 0.25em;\n        background: #ccc;\n        display: flex;\n        justify-content: space-between;\n        position: absolute;\n        bottom: 100%;\n        left: 0;\n        right: 0;\n      }\n      .${t}:first-child {\n        font-family: monospace;\n      }\n    `),this.nav=document.createElement("nav"),this.nav.setAttribute("class",t),this.nav.innerHTML=`\n      <div>Built On: ${g}</div>\n      <div>\n        <button class="${t}__simulate-btn" type="button">${s}</button>\n        <button class="${t}__clear-btn" type="button">Clear</button>\n      </div>\n    `,this.clearBtn=this.nav.querySelector(`.${t}__clear-btn`),this.simulateBtn=this.nav.querySelector(`.${t}__simulate-btn`),this.clearBtn.addEventListener("click",e),this.simulateBtn.addEventListener("click",i)}disableClear(){this.clearBtn.disabled=!0}enableClear(){this.clearBtn.disabled=!1}}n("rootStyles","\n  html, body {\n    padding: 0;\n    margin: 0;\n  }\n  body {\n    background: #000;\n  }\n  \n  .container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n");const y={mouseDown:[],mouseLeave:[],mouseMove:[],mouseUp:[]};let b,v,w,C,f;const S=t=>({mouseX:Math.max(0,t.x-C),mouseY:Math.max(0,t.y-f)});function E(t){y.mouseDown.forEach(e=>{e(S(t))})}function _(t){y.mouseMove.forEach(e=>{e(S(t))})}function B(){y.mouseLeave.forEach(t=>{t()})}function A(){y.mouseUp.forEach(t=>{t()})}function x(){const{left:t,top:e}=v.getBoundingClientRect();C=t,f=e}document.addEventListener("DOMContentLoaded",()=>{b=document.createElement("div"),b.setAttribute("class","container"),document.body.append(b);const t=new RootNav_RootNav({onClear:()=>{w.clear()},onSimulate:()=>{w.runSimulation?(w.stopSimulation(),t.simulateBtn.innerText="Run Simulation",t.enableClear()):(w.startSimulation(),t.simulateBtn.innerText="Stop Simulation",t.disableClear())},simulationStartText:"Run Simulation"});b.append(t.nav),v=document.createElement("div"),v.setAttribute("class","creator-container"),b.append(v);const e=new Grid_Grid({lineColor:"rgba(255, 255, 255, 0.1)"});v.append(e.container),y.mouseMove.push(e.mouseMoved),y.mouseLeave.push(e.mouseLeft),w=new Creator_Creator({parentEl:v}),v.append(w.parentSVG),y.mouseDown.push(w.mouseDown),y.mouseMove.push(w.mouseMoved),y.mouseUp.push(w.mouseUp),window.addEventListener("resize",x),v.addEventListener("mousedown",E),v.addEventListener("mousemove",_),v.addEventListener("mouseleave",B),v.addEventListener("mouseup",A),x()})}],[[0,1]]]);