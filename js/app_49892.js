(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(t,e,s){"use strict";s.r(e);class i{static genColor(){return`#${("000000"+Math.random().toString(16).slice(2,8).toUpperCase()).slice(-6)}`}constructor({color:t,filter:e,gravity:s=i.DEFAULT__GRAVITY,id:n,radius:o=i.SIZE__MIN,x:a=0,y:r=0}={}){this.color=t||i.genColor(),this.gravity=s,this.id=n||Date.now(),this.radius=o,this.x=a,this.y=r,this.gravityField=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.gravityField.setAttributeNS(null,"data-id",`${this.id}_gF`),this.gravityField.setAttributeNS(null,"cx",a),this.gravityField.setAttributeNS(null,"cy",r),this.gravityField.setAttributeNS(null,"r",o*s),this.gravityField.setAttributeNS(null,"fill","none"),this.gravityField.setAttributeNS(null,"stroke",this.color),this.gravityField.setAttributeNS(null,"stroke-opacity","15%"),this.celestialBody=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.celestialBody.setAttributeNS(null,"cx",a),this.celestialBody.setAttributeNS(null,"cy",r),this.celestialBody.setAttributeNS(null,"r",o),this.celestialBody.setAttributeNS(null,"fill",this.color),this.celestialBody.setAttributeNS(null,"stroke","none"),this.celestialBody.setAttributeNS(null,"data-id",this.id),e&&this.celestialBody.setAttributeNS(null,"filter",`url(#${e})`),this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.append(this.gravityField),this.group.append(this.celestialBody),this.setColor=this.setColor.bind(this),this.setGravity=this.setGravity.bind(this),this.setRadius=this.setRadius.bind(this),this.editableProps={color:{handler:this.setColor,label:"Color",type:i.EDITABLE_TYPE__COLOR,value:()=>this.color},gravity:{handler:this.setGravity,label:"Gravity",min:0,max:50,type:i.EDITABLE_TYPE__NUMBER,value:()=>+this.gravity},radius:{handler:this.setRadius,label:"Radius",min:i.SIZE__MIN,max:i.SIZE__MAX,type:i.EDITABLE_TYPE__NUMBER,value:()=>+this.radius}}}setColor(t){this.gravityField.setAttributeNS(null,"stroke",t),this.celestialBody.setAttributeNS(null,"fill",t),this.color=t}setGravity(t){this.gravityField.setAttributeNS(null,"r",this.radius*t),this.gravity=t}setRadius(t){let e=t;e<i.SIZE__MIN?e=i.SIZE__MIN:e>i.SIZE__MAX&&(e=i.SIZE__MAX),e=Math.round(e),this.gravityField.setAttributeNS(null,"r",e*this.gravity),this.celestialBody.setAttributeNS(null,"r",e),this.radius=e}}i.DEFAULT__GRAVITY=2,i.EDITABLE_TYPE__COLOR="color",i.EDITABLE_TYPE__NUMBER="number",i.EDITABLE_TYPE__SELECT="select",i.SIZE__MIN=10,i.SIZE__MAX=100;class n extends i{constructor(t){super(t)}}function o(t,e){if(!document.getElementById(t)){const s=document.createElement("style");s.id=t,s.innerHTML=e,document.head.append(s)}}const a=[class extends i{constructor(t){super(t)}},class extends i{constructor(t){t.color="#000000",super(t),delete this.editableProps.color}},class extends i{constructor(t){super(t)}},n,class extends i{constructor(t){t.color="#FFFFFF",t.filter="glow",super(t),delete this.editableProps.color}}];class r{constructor({className:t="creator",parentEl:e}={}){o("pcStyles",`\n      .${t} {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      \n      .${t}__dialog {\n        font-family: Helvetica, Arial, sans-serif;\n        border: solid 1px #b7b7b7;\n        border-radius: 0.25em;\n        box-shadow: 0 6px 10px 3px;\n      }\n      .${t}__dialog::backdrop {\n        background: rgba(38, 45, 56, 0.5);  \n      }\n      .${t}__dialog-prop {\n        margin-bottom: 1em;\n        display: block;\n      }\n      .${t}__dialog-menu {\n        margin: 0;\n        padding: 0;\n        display: flex;\n        justify-content: flex-end;\n      }\n      .${t}__dialog-menu button {\n        width: 100%;\n      }\n    `),this.celestialBodies={},this.className=t,this.parentEl=e,this.parentSVG=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.parentSVG.setAttributeNS(null,"class",t),this.parentSVG.setAttributeNS(null,"width",e.offsetWidth),this.parentSVG.setAttributeNS(null,"height",e.offsetHeight),this.defs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.parentSVG.append(this.defs),this.glowFilter=document.createElementNS("http://www.w3.org/2000/svg","filter"),this.glowFilter.setAttributeNS(null,"id","glow"),this.glowFilter.setAttributeNS(null,"width","600%"),this.glowFilter.setAttributeNS(null,"height","600%"),this.glowFilter.setAttributeNS(null,"x","-150%"),this.glowFilter.setAttributeNS(null,"y","-150%"),this.glowFilter.innerHTML='\n      \x3c!-- Thicken out the original shape --\x3e\n      <feMorphology operator="dilate" radius="4" in="SourceAlpha" result="thicken" />\n\n      \x3c!-- Use a gaussian blur to create the soft blurriness of the glow --\x3e\n      <feGaussianBlur in="thicken" stdDeviation="10" result="blurred" />\n\n      \x3c!-- Change the colour --\x3e\n      <feFlood flood-color="rgb(255, 255, 255)" result="glowColor" />\n\n      \x3c!-- Color in the glows --\x3e\n      <feComposite in="glowColor" in2="blurred" operator="in" result="softGlow_colored" />\n\n      \x3c!--\tLayer the effects together --\x3e\n      <feMerge>\n        <feMergeNode in="softGlow_colored"/>\n        <feMergeNode in="SourceGraphic"/>\n      </feMerge>\n    ',this.defs.append(this.glowFilter),this.mouseDown=this.mouseDown.bind(this),this.mouseMoved=this.mouseMoved.bind(this),this.mouseUp=this.mouseUp.bind(this),this.handleClick=this.handleClick.bind(this),this.addListeners()}addListeners(){this.parentSVG.addEventListener("click",this.handleClick)}addEditablePropsToDialog(t){const e=[];let s="";Object.keys(t.editableProps).forEach(n=>{const o=t.editableProps[n],a=o.value();let r="";switch(o.type){case i.EDITABLE_TYPE__COLOR:a.lenth<6&&e.push(`- [${n}] Hex colors should be 6 characters long, recieved '${a}'`),r=`<input type="color" name="${n}" value="${a}" />`;break;case i.EDITABLE_TYPE__NUMBER:void 0===a&&e.push(`- [${n}] Missing value`),r=`<input type="number" name="${n}" ${void 0!==o.min?`min="${o.min}"`:""} ${void 0!==o.max?`max="${o.max}"`:""} value="${a}" />`;break;case i.EDITABLE_TYPE__SELECT:o.options&&o.options.length||e.push(`- [${n}] Missing options`),r=`<select name="${n}">${o.options().map(t=>`<option value="${t}" ${a===t?"selected":""}>${t}</option>`)}</select>`}s+=`<label class="${this.className}__dialog-prop">${o.label}: ${r}</label>`}),document.getElementById("editableProps").innerHTML=s,e.length&&alert(`[ERROR] Missing required values\n${e.join("\n")}`)}clear(){[...this.parentSVG.childNodes].forEach(t=>{"defs"!==t.nodeName&&t.remove()}),this.celestialBodies={}}editAttributes(t){let e=t,s=t;const i=document.createElement("dialog");i.setAttribute("class",`${this.className}__dialog`),this.parentEl.append(i);const n=`<select name="type">${a.map(t=>{const s=e.constructor.name,i=t.name;return`<option value="${i}" ${s===i?"selected":""}>${i}</option>`})}</select>`;i.innerHTML=`\n      <form method="dialog">\n        <label class="${this.className}__dialog-prop">Type: ${n}</label>\n        <div id="editableProps"></div>\n        <menu class="${this.className}__dialog-menu">\n          <button value="cancel">Cancel</button>\n          <button value="save">Save</button>\n        </menu>\n      </form>\n    `,this.addEditablePropsToDialog(e),i.showModal(),this.dialogIsOpen=!0,i.addEventListener("change",t=>{if("type"===t.target.name){const s=a.find(e=>e.name===t.target.value);if(s.name!==e.constructor.name){const{color:t,id:i,radius:n,x:o,y:a}=e;e.group.remove(),e=new s({color:t,id:i,radius:n,x:o,y:a}),this.celestialBodies[i]=e,this.addEditablePropsToDialog(e),this.parentSVG.appendChild(e.group)}}}),i.addEventListener("click",t=>{"DIALOG"===t.target.nodeName&&i.close()}),i.addEventListener("close",()=>{if("save"===i.returnValue){[...new FormData(i.querySelector("form"))].forEach(([t,s])=>{const i=e.editableProps[t];i&&i.handler(s)})}else e.group.remove(),this.celestialBodies[e.id]=s,this.parentSVG.appendChild(s.group);this.dialogIsOpen=!1,i.remove()}),i.addEventListener("input",t=>{const s=t.target.name,i=t.target.value,n=e.editableProps[s];n&&n.handler(i)})}handleClick(t){const e=t.target;this.mouseIsDown||"svg"===e.nodeName||this.editAttributes(this.celestialBodies[e.getAttribute("data-id")])}mouseDown({mouseX:t,mouseY:e}){this.dialogIsOpen||(this.startX=t,this.startY=e,this.mouseIsDown=!0)}mouseMoved({mouseX:t,mouseY:e}){if(this.mouseIsDown){const s=t-this.startX,i=e-this.startY,o=Math.sqrt(s*s+i*i);!this.currentCelestialBody&&o>=n.SIZE__MIN?(this.currentCelestialBody=new n({x:this.startX,y:this.startY}),this.parentSVG.appendChild(this.currentCelestialBody.group),this.celestialBodies[this.currentCelestialBody.id]=this.currentCelestialBody):this.currentCelestialBody&&this.currentCelestialBody.setRadius(o)}}mouseUp(){this.currentCelestialBody=void 0,this.mouseIsDown=!1}}class l{constructor({className:t="bg-grid",columns:e=20,columnSpacing:s=50,lineColor:i,rows:n=10,rowSpacing:a=50}={}){o("gridStyles",`\n      .${t} {\n        font-size: 0;\n        background: #262d38;\n        cursor: crosshair;\n      }\n      \n      .${t} .hover-canvas {\n        filter: blur(14px);\n        opacity: 0.3;\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n    `),this.container=document.createElement("div"),this.gridCanvas=document.createElement("canvas"),this.gridCtx=this.gridCanvas.getContext("2d"),this.hoverCanvas=document.createElement("canvas"),this.hoverCtx=this.hoverCanvas.getContext("2d"),this.gridCanvas.width=e*s,this.gridCanvas.height=n*a,this.hoverCanvas.width=this.gridCanvas.width,this.hoverCanvas.height=this.gridCanvas.height,this.columns=e,this.columnSpacing=s,this.rows=n,this.rowSpacing=a,this.lineColor=i,this.renderGrid(),t&&this.container.classList.add(t),this.gridCanvas.classList.add("grid-canvas"),this.hoverCanvas.classList.add("hover-canvas"),this.container.append(this.gridCanvas),this.container.append(this.hoverCanvas),this.mouseMoved=this.mouseMoved.bind(this),this.mouseLeft=this.mouseLeft.bind(this)}checkHoverPoint(t,e,s,i,n){const o=(t-s)*(t-s)+(e-i)*(e-i),a=n*n;return{inRadius:o<=a,scale:(a-o)/100*.001}}mouseMoved({mouseX:t,mouseY:e}){const s=this.columnSpacing*(this.columns/3);this.hoverCtx.clearRect(0,0,this.hoverCanvas.width,this.hoverCanvas.height),this.hoverCtx.fillStyle="#fff",this.hoverCtx.beginPath();for(let i=0;i<=this.rows;i++)for(let n=0;n<=this.columns;n++){const o=n*this.columnSpacing+.5,a=i*this.rowSpacing+.5,{inRadius:r,scale:l}=this.checkHoverPoint(o,a,t,e,s);if(r){const t=10*l;this.hoverCtx.moveTo(o,a),this.hoverCtx.arc(o,a,t,0,2*Math.PI,!0)}}this.hoverCtx.fill()}mouseLeft(){this.hoverCtx.clearRect(0,0,this.hoverCanvas.width,this.hoverCanvas.height)}renderGrid(){const t=document.createElement("canvas"),e=t.getContext("2d");t.width=.3*this.columnSpacing,t.height=.3*this.rowSpacing,e.lineWidth=1,this.lineColor&&(e.strokeStyle=this.lineColor),e.beginPath(),e.moveTo(t.width/2,0),e.lineTo(t.width/2,t.height),e.stroke(),e.beginPath(),e.moveTo(0,t.height/2),e.lineTo(t.width,t.height/2),e.stroke();for(let e=0;e<=this.rows;e++){const s=e===this.rows?-.5:.5;for(let i=0;i<=this.columns;i++){const n=i===this.columns?-.5:.5;this.gridCtx.drawImage(t,0,0,this.gridCanvas.width,this.gridCanvas.height,n+(i*this.columnSpacing-t.width/2)|0,s+(e*this.rowSpacing-t.height/2)|0,this.gridCanvas.width,this.gridCanvas.height)}}}}class h{constructor({className:t="root-nav",onClear:e}={}){if(o("rnStyles",`\n      .${t} {\n        padding: 0.25em;\n        background: #ccc;\n        display: flex;\n        justify-content: flex-end;\n        position: absolute;\n        bottom: 100%;\n        left: 0;\n        right: 0;\n      }\n    `),this.nav=document.createElement("nav"),this.nav.setAttribute("class",t),e){const t=document.createElement("button");t.setAttribute("type","button"),t.addEventListener("click",e),t.innerText="Clear",this.nav.append(t)}}}o("rootStyles","\n  html, body {\n    padding: 0;\n    margin: 0;\n  }\n  body {\n    background: #000;\n  }\n  \n  .container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n");const d={mouseDown:[],mouseLeave:[],mouseMove:[],mouseUp:[]};let c,u,p,m,g;const v=t=>{return{mouseX:Math.max(0,t.x-m),mouseY:Math.max(0,t.y-g)}};function b(t){d.mouseDown.forEach(e=>{e(v(t))})}function w(t){d.mouseMove.forEach(e=>{e(v(t))})}function E(){d.mouseLeave.forEach(t=>{t()})}function f(){d.mouseUp.forEach(t=>{t()})}function y(){const{left:t,top:e}=u.getBoundingClientRect();m=t,g=e}document.addEventListener("DOMContentLoaded",()=>{(c=document.createElement("div")).setAttribute("class","container"),document.body.append(c);const t=new h({onClear:()=>{p.clear()}});c.append(t.nav),(u=document.createElement("div")).setAttribute("class","creator-container"),c.append(u);const e=new l({lineColor:"rgba(255, 255, 255, 0.1)"});u.append(e.container),d.mouseMove.push(e.mouseMoved),d.mouseLeave.push(e.mouseLeft),p=new r({parentEl:u}),u.append(p.parentSVG),d.mouseDown.push(p.mouseDown),d.mouseMove.push(p.mouseMoved),d.mouseUp.push(p.mouseUp),window.addEventListener("resize",y),u.addEventListener("mousedown",b),u.addEventListener("mousemove",w),u.addEventListener("mouseleave",E),u.addEventListener("mouseup",f),y()})}],[[0,1]]]);