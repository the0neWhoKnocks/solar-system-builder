(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(t,e,i){"use strict";function s(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),i.push.apply(i,s)}return i}function n(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}i.r(e);class o{static genColor(){return`#${("000000"+Math.random().toString(16).slice(2,8).toUpperCase()).slice(-6)}`}static genArrowTransform({pos:t,rotate:e,x:i,y:s}){return{json:JSON.stringify({pos:t,rotate:e,x:i,y:s}),value:`translate(${i} ${s}) rotate(${e})`}}static createArrow({pos:t,rotate:e=0,x:i=0,y:s=0}){const n=document.createElementNS("http://www.w3.org/2000/svg","polygon"),r=o.genArrowTransform({pos:t,rotate:e,x:i,y:s});return n.setAttributeNS(null,"points","0,-5 5,5 0,2.5 -5,5"),n.setAttributeNS(null,"data-transform",r.json),n}constructor({color:t,gravity:e=o.DEFAULT__GRAVITY,id:i,radius:s=o.SIZE__MIN,rotation:n=o.ROTATION__CLOCKWISE,x:r=0,y:a=0}={}){this.color=t||o.genColor(),this.gravity=e,this.id=i||Date.now(),this.radius=s,this.rotation=n,this.x=r,this.y=a,this.gravityField=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.gravityField.setAttributeNS(null,"cx",0),this.gravityField.setAttributeNS(null,"cy",0),this.gravityField.setAttributeNS(null,"r",s*e),this.gravityField.setAttributeNS(null,"fill","none"),this.gravityField.setAttributeNS(null,"stroke",this.color),this.gravityField.setAttributeNS(null,"stroke-opacity","15%"),this.gravityField.setAttributeNS(null,"data-id",`${this.id}_gF`),this.directionalArrows=document.createElementNS("http://www.w3.org/2000/svg","g"),this.directionalArrows.setAttributeNS(null,"fill",this.color),this.directionalArrows.setAttributeNS(null,"fill-opacity","25%"),this.directionalArrows.setAttributeNS(null,"stroke","none"),this.directionalArrows.append(o.createArrow({pos:"top"})),this.directionalArrows.append(o.createArrow({pos:"left"})),this.directionalArrows.append(o.createArrow({pos:"bottom"})),this.directionalArrows.append(o.createArrow({pos:"right"})),this.celestialBody=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.celestialBody.setAttributeNS(null,"cx",0),this.celestialBody.setAttributeNS(null,"cy",0),this.celestialBody.setAttributeNS(null,"r",s),this.celestialBody.setAttributeNS(null,"fill",this.color),this.celestialBody.setAttributeNS(null,"stroke","none"),this.celestialBody.setAttributeNS(null,"data-id",this.id),this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.setAttributeNS(null,"transform",`translate(${r} ${a})`),this.group.append(this.gravityField),this.group.append(this.directionalArrows),this.group.append(this.celestialBody),this.setColor=this.setColor.bind(this),this.setGravity=this.setGravity.bind(this),this.setRadius=this.setRadius.bind(this),this.setRotation=this.setRotation.bind(this),this.editableProps={color:{handler:this.setColor,label:"Color",type:o.EDITABLE_TYPE__COLOR,value:()=>this.color},gravity:{handler:this.setGravity,label:"Gravity",min:0,max:50,type:o.EDITABLE_TYPE__NUMBER,value:()=>+this.gravity},radius:{handler:this.setRadius,label:"Radius",min:o.SIZE__MIN,max:o.SIZE__MAX,type:o.EDITABLE_TYPE__NUMBER,value:()=>+this.radius},rotation:{handler:this.setRotation,label:"Rotation",options:[o.ROTATION__CLOCKWISE,o.ROTATION__COUNTER_CLOCKWISE],type:o.EDITABLE_TYPE__SELECT,value:()=>this.rotation}},this.renderDirectionalArrows()}renderDirectionalArrows(){const t=this.radius*this.gravity,e=this.rotation===o.ROTATION__CLOCKWISE;[...this.directionalArrows.childNodes].forEach(i=>{const r=JSON.parse(i.getAttribute("data-transform"));switch(r.pos){case"top":r.y=-t,r.rotate=e?90:270;break;case"left":r.x=t,r.rotate=e?180:0;break;case"bottom":r.y=t,r.rotate=e?270:90;break;case"right":r.x=-t,r.rotate=e?0:180}const a=o.genArrowTransform(function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?s(i,!0).forEach(function(e){n(t,e,i[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):s(i).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))})}return t}({},r));i.setAttributeNS(null,"transform",a.value),i.setAttributeNS(null,"data-transform",a.json)})}setColor(t){this.gravityField.setAttributeNS(null,"stroke",t),this.directionalArrows.setAttributeNS(null,"fill",t),this.celestialBody.setAttributeNS(null,"fill",t),this.color=t}setGravity(t){this.gravityField.setAttributeNS(null,"r",this.radius*t),this.gravity=t,this.renderDirectionalArrows()}setRadius(t){let e=t;e<o.SIZE__MIN?e=o.SIZE__MIN:e>o.SIZE__MAX&&(e=o.SIZE__MAX),e=Math.round(e),this.celestialBody.setAttributeNS(null,"r",e),this.radius=e,this.setGravity(this.gravity)}setRotation(t){this.rotation=t,this.renderDirectionalArrows()}}o.DEFAULT__GRAVITY=2,o.EDITABLE_TYPE__COLOR="color",o.EDITABLE_TYPE__NUMBER="number",o.EDITABLE_TYPE__SELECT="select",o.ROTATION__CLOCKWISE="clockwise",o.ROTATION__COUNTER_CLOCKWISE="counter-clockwise",o.SIZE__MIN=10,o.SIZE__MAX=100;function r(t,e){if(!document.getElementById(t)){const i=document.createElement("style");i.id=t,i.innerHTML=e,document.head.append(i)}}class a{constructor({className:t="dialog",content:e="",onCancel:i,onSubmit:s,parentEl:n,x:o=0,y:a=0}={}){r("dialogStyles",`\n      .${t} {\n        font-family: Helvetica, Arial, sans-serif;\n        border: solid 1px #b7b7b7;\n        border-radius: 0.25em;\n        padding: 0;\n        margin: 0;\n        box-shadow: 0 6px 10px 3px;\n        background: #eee;\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      \n      .${t}-backdrop {\n        background: rgba(38, 45, 56, 0.5);  \n        position: fixed;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    `),this.onCancel=i,this.onSubmit=s,this.parentEl=n,this.x=o,this.y=a,this.backdrop=document.createElement("div"),this.backdrop.setAttribute("class",`${t}-backdrop`),this.dialogWindow=document.createElement("div"),this.dialogWindow.setAttribute("class",`${t}`),n.append(this.backdrop),n.append(this.dialogWindow),this.dialogWindow.innerHTML=e,this.handleClick=this.handleClick.bind(this),this.backdrop.addEventListener("click",this.handleClick),this.dialogWindow.addEventListener("click",this.handleClick),this.updatePosition({x:o,y:a})}handleClick(t){const e=t.target;if("BUTTON"===e.nodeName){if("submit"===e.type){t.preventDefault();const i=new FormData(this.dialogWindow.querySelector("form"));this.onSubmit&&this.onSubmit(e.name,i)}else this.onCancel&&this.onCancel();this.remove()}else e===this.backdrop&&(this.onCancel&&this.onCancel(),this.remove())}remove(){this.backdrop.remove(),this.dialogWindow.remove()}updatePosition({x:t,y:e}){window.requestAnimationFrame(()=>{const i=this.dialogWindow.offsetWidth,s=this.dialogWindow.offsetHeight;this.x=t,this.y=e,t+i>this.parentEl.offsetWidth&&(this.x=t-i),e+s>this.parentEl.offsetHeight&&(this.y=e-s),this.dialogWindow.style.top=`${this.y}px`,this.dialogWindow.style.left=`${this.x}px`})}}class l extends o{constructor(t){super(t)}}const h=[class extends o{constructor(t){super(t)}},class extends o{constructor(t){t.color="#000000",super(t),delete this.editableProps.color}},class extends o{constructor(t){super(t)}},l,class extends o{constructor(t){t.color="#FFFFFF",super(t),delete this.editableProps.color,this.celestialBody.setAttributeNS(null,"filter","url(#glow)")}}];class d{constructor({className:t="creator",parentEl:e}={}){r("pcStyles",`\n      .${t} {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      \n      .${t}-container {\n        background: black;\n      }\n      \n      .${t}__dialog form {\n        padding: 1em;\n      }\n      .${t}__dialog-prop {\n        padding-bottom: 0.5em;\n        border-bottom: solid 1px #dadada;\n        margin-bottom: 0.5em;\n        display: flex;\n        justify-content: space-between;\n      }\n      .${t}__dialog-prop *:first-child {\n        margin-left: 1em;\n      }\n      .${t}__dialog-menu {\n        margin: 0;\n        padding: 0;\n        display: flex;\n        justify-content: flex-end;\n      }\n      .${t}__dialog-menu button {\n        width: 100%;\n      }\n    `),this.celestialBodies={},this.className=t,this.parentEl=e,this.parentSVG=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.parentSVG.setAttributeNS(null,"class",t),this.parentSVG.setAttributeNS(null,"width",e.offsetWidth),this.parentSVG.setAttributeNS(null,"height",e.offsetHeight),this.defs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.parentSVG.append(this.defs),this.glowFilter=document.createElementNS("http://www.w3.org/2000/svg","filter"),this.glowFilter.setAttributeNS(null,"id","glow"),this.glowFilter.setAttributeNS(null,"width","600%"),this.glowFilter.setAttributeNS(null,"height","600%"),this.glowFilter.setAttributeNS(null,"x","-150%"),this.glowFilter.setAttributeNS(null,"y","-150%"),this.glowFilter.innerHTML='\n      \x3c!-- Thicken out the original shape --\x3e\n      <feMorphology operator="dilate" radius="4" in="SourceAlpha" result="thicken" />\n\n      \x3c!-- Use a gaussian blur to create the soft blurriness of the glow --\x3e\n      <feGaussianBlur in="thicken" stdDeviation="10" result="blurred" />\n\n      \x3c!-- Change the colour --\x3e\n      <feFlood flood-color="rgb(255, 255, 255)" result="glowColor" />\n\n      \x3c!-- Color in the glows --\x3e\n      <feComposite in="glowColor" in2="blurred" operator="in" result="softGlow_colored" />\n\n      \x3c!--\tLayer the effects together --\x3e\n      <feMerge>\n        <feMergeNode in="softGlow_colored"/>\n        <feMergeNode in="SourceGraphic"/>\n      </feMerge>\n    ',this.defs.append(this.glowFilter),this.mouseDown=this.mouseDown.bind(this),this.mouseMoved=this.mouseMoved.bind(this),this.mouseUp=this.mouseUp.bind(this),this.handleClick=this.handleClick.bind(this),this.addListeners()}addListeners(){this.parentSVG.addEventListener("click",this.handleClick)}addEditablePropsToDialog(t){const e=[];let i="";Object.keys(t.editableProps).forEach(s=>{const n=t.editableProps[s],r=n.value();let a="";switch(n.type){case o.EDITABLE_TYPE__COLOR:r.lenth<6&&e.push(`- [${s}] Hex colors should be 6 characters long, recieved '${r}'`),a=`<input type="color" name="${s}" value="${r}" />`;break;case o.EDITABLE_TYPE__NUMBER:void 0===r&&e.push(`- [${s}] Missing value`),a=`<input type="number" name="${s}" ${void 0!==n.min?`min="${n.min}"`:""} ${void 0!==n.max?`max="${n.max}"`:""} value="${r}" />`;break;case o.EDITABLE_TYPE__SELECT:n.options&&n.options.length||e.push(`- [${s}] Missing options`),a=`<select name="${s}">${n.options.map(t=>`<option value="${t}" ${r===t?"selected":""}>${t}</option>`)}</select>`}i+=`<label class="${this.className}__dialog-prop">${n.label}: ${a}</label>`}),document.getElementById("editableProps").innerHTML=i,e.length&&alert(`[ERROR] Missing required values\n${e.join("\n")}`)}clear(){[...this.parentSVG.childNodes].forEach(t=>{"defs"!==t.nodeName&&t.remove()}),this.celestialBodies={}}editAttributes(t){let e=t,i=t;const s=`<select name="type">${h.map(t=>{const i=e.constructor.name,s=t.name;return`<option value="${s}" ${i===s?"selected":""}>${s}</option>`})}</select>`,n=new a({className:`${this.className}__dialog`,content:`\n        <form>\n          <label class="${this.className}__dialog-prop">Type: ${s}</label>\n          <div id="editableProps"></div>\n          <menu class="${this.className}__dialog-menu">\n            <button type="button">Cancel</button>\n            <button type="submit">Save</button>\n          </menu>\n        </form>\n      `,onCancel:()=>{e!==i&&(e.group.remove(),this.celestialBodies[e.id]=i,this.parentSVG.appendChild(i.group)),this.dialogIsOpen=!1},onSubmit:(t,i)=>{[...i].forEach(([t,i])=>{const s=e.editableProps[t];s&&s.handler(i)}),this.dialogIsOpen=!1},parentEl:this.parentEl,x:e.x,y:e.y});this.addEditablePropsToDialog(e),this.dialogIsOpen=!0,n.dialogWindow.addEventListener("change",t=>{if("type"===t.target.name){const s=h.find(e=>e.name===t.target.value);if(s.name!==e.constructor.name){const{color:t,gravity:o,id:r,radius:a,rotation:l,x:h,y:d}=e;e.group.remove(),e=s.name===i.constructor.name?i:new s({color:t,gravity:o,id:r,radius:a,rotation:l,x:h,y:d}),this.celestialBodies[r]=e,this.addEditablePropsToDialog(e),n.updatePosition({x:h,y:d}),this.parentSVG.appendChild(e.group)}}}),n.dialogWindow.addEventListener("input",t=>{const i=t.target.name,s=t.target.value,n=e.editableProps[i];n&&n.handler(s)})}handleClick(t){const e=t.target;this.mouseIsDown||"svg"===e.nodeName||this.editAttributes(this.celestialBodies[e.getAttribute("data-id")])}mouseDown({mouseX:t,mouseY:e}){this.dialogIsOpen||(this.startX=t,this.startY=e,this.mouseIsDown=!0)}mouseMoved({mouseX:t,mouseY:e}){if(this.mouseIsDown){const i=t-this.startX,s=e-this.startY,n=Math.sqrt(i*i+s*s);!this.currentCelestialBody&&n>=l.SIZE__MIN?(this.currentCelestialBody=new l({x:this.startX,y:this.startY}),this.parentSVG.appendChild(this.currentCelestialBody.group),this.celestialBodies[this.currentCelestialBody.id]=this.currentCelestialBody):this.currentCelestialBody&&this.currentCelestialBody.setRadius(n)}}mouseUp(){this.currentCelestialBody=void 0,this.mouseIsDown=!1}}class c{constructor({className:t="bg-grid",columns:e=20,columnSpacing:i=50,lineColor:s,rows:n=10,rowSpacing:o=50}={}){r("gridStyles",`\n      .${t} {\n        font-size: 0;\n        background: #262d38;\n        cursor: crosshair;\n        opacity: 0.5;\n      }\n      \n      .${t} .hover-canvas {\n        filter: blur(15px);\n        opacity: 0.5;\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n    `),this.container=document.createElement("div"),this.gridCanvas=document.createElement("canvas"),this.gridCtx=this.gridCanvas.getContext("2d"),this.hoverCanvas=document.createElement("canvas"),this.hoverCtx=this.hoverCanvas.getContext("2d"),this.gridCanvas.width=e*i,this.gridCanvas.height=n*o,this.hoverCanvas.width=this.gridCanvas.width,this.hoverCanvas.height=this.gridCanvas.height,this.columns=e,this.columnSpacing=i,this.rows=n,this.rowSpacing=o,this.lineColor=s,this.renderGrid(),t&&this.container.classList.add(t),this.gridCanvas.classList.add("grid-canvas"),this.hoverCanvas.classList.add("hover-canvas"),this.container.append(this.gridCanvas),this.container.append(this.hoverCanvas),this.mouseMoved=this.mouseMoved.bind(this),this.mouseLeft=this.mouseLeft.bind(this)}checkHoverPoint(t,e,i,s,n){const o=(t-i)*(t-i)+(e-s)*(e-s),r=n*n;return{inRadius:o<=r,scale:(r-o)/100*.001}}mouseMoved({mouseX:t,mouseY:e}){const i=this.columnSpacing*(this.columns/3);this.hoverCtx.clearRect(0,0,this.hoverCanvas.width,this.hoverCanvas.height),this.hoverCtx.fillStyle="#fff",this.hoverCtx.beginPath();for(let s=0;s<=this.rows;s++)for(let n=0;n<=this.columns;n++){const o=n*this.columnSpacing+.5,r=s*this.rowSpacing+.5,{inRadius:a,scale:l}=this.checkHoverPoint(o,r,t,e,i);if(a){const t=10*l;this.hoverCtx.moveTo(o,r),this.hoverCtx.arc(o,r,t,0,2*Math.PI,!0)}}this.hoverCtx.fill()}mouseLeft(){this.hoverCtx.clearRect(0,0,this.hoverCanvas.width,this.hoverCanvas.height)}renderGrid(){const t=document.createElement("canvas"),e=t.getContext("2d");t.width=.3*this.columnSpacing,t.height=.3*this.rowSpacing,e.lineWidth=1,this.lineColor&&(e.strokeStyle=this.lineColor),e.beginPath(),e.moveTo(t.width/2,0),e.lineTo(t.width/2,t.height),e.stroke(),e.beginPath(),e.moveTo(0,t.height/2),e.lineTo(t.width,t.height/2),e.stroke();for(let e=0;e<=this.rows;e++){const i=e===this.rows?-.5:.5;for(let s=0;s<=this.columns;s++){const n=s===this.columns?-.5:.5;this.gridCtx.drawImage(t,0,0,this.gridCanvas.width,this.gridCanvas.height,n+(s*this.columnSpacing-t.width/2)|0,i+(e*this.rowSpacing-t.height/2)|0,this.gridCanvas.width,this.gridCanvas.height)}}}}const u=(t,e="00")=>e.substring(0,e.length-`${t}`.length)+t,p=new Date(window.BUILD_TIME),g=p.getHours(),m=u(p.getMonth()+1),b=u(p.getDate()),v=u(g>12?g-12:g),w=u(p.getMinutes()),f=g>=12?"pm":"am",y=`${m}/${b}/${p.getFullYear()} ${v}:${w}${f}`;class E{constructor({className:t="root-nav",onClear:e}={}){r("rnStyles",`\n      .${t} {\n        padding: 0.25em;\n        background: #ccc;\n        display: flex;\n        justify-content: space-between;\n        position: absolute;\n        bottom: 100%;\n        left: 0;\n        right: 0;\n      }\n      .${t}:first-child {\n        font-family: monospace;\n      }\n    `),this.nav=document.createElement("nav"),this.nav.setAttribute("class",t),this.nav.innerHTML=`\n      <div>Built On: ${y}</div>\n      <div>\n        <button class="${t}__simulate-btn" type="button">Simulate</button>\n        <button class="${t}__clear-btn" type="button">Clear</button>\n      </div>\n    `,this.nav.querySelector(`.${t}__clear-btn`).addEventListener("click",e)}}r("rootStyles","\n  html, body {\n    padding: 0;\n    margin: 0;\n  }\n  body {\n    background: #000;\n  }\n  \n  .container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n");const S={mouseDown:[],mouseLeave:[],mouseMove:[],mouseUp:[]};let C,_,A,N,x;const $=t=>{return{mouseX:Math.max(0,t.x-N),mouseY:Math.max(0,t.y-x)}};function T(t){S.mouseDown.forEach(e=>{e($(t))})}function L(t){S.mouseMove.forEach(e=>{e($(t))})}function I(){S.mouseLeave.forEach(t=>{t()})}function O(){S.mouseUp.forEach(t=>{t()})}function k(){const{left:t,top:e}=_.getBoundingClientRect();N=t,x=e}document.addEventListener("DOMContentLoaded",()=>{(C=document.createElement("div")).setAttribute("class","container"),document.body.append(C);const t=new E({onClear:()=>{A.clear()}});C.append(t.nav),(_=document.createElement("div")).setAttribute("class","creator-container"),C.append(_);const e=new c({lineColor:"rgba(255, 255, 255, 0.1)"});_.append(e.container),S.mouseMove.push(e.mouseMoved),S.mouseLeave.push(e.mouseLeft),A=new d({parentEl:_}),_.append(A.parentSVG),S.mouseDown.push(A.mouseDown),S.mouseMove.push(A.mouseMoved),S.mouseUp.push(A.mouseUp),window.addEventListener("resize",k),_.addEventListener("mousedown",T),_.addEventListener("mousemove",L),_.addEventListener("mouseleave",I),_.addEventListener("mouseup",O),k()})}],[[0,1]]]);